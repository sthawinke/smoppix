% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitLMMs.R, R/getResults.R
\name{fitLMMs}
\alias{fitLMMs}
\alias{fitLMMsSingle}
\alias{getResults}
\title{Fit linear (mixed) models for all probabilistic indices (PIs) and all genes}
\usage{
fitLMMs(
  obj,
  pis = obj$pis,
  fixedVars = NULL,
  randomVars = NULL,
  verbose = TRUE,
  returnModels = FALSE,
  Formula = NULL,
  randomNested = TRUE,
  features = getEstFeatures(obj),
  moranFormula = NULL,
  addMoransI = FALSE,
  numNNs = 10,
  ...
)

fitLMMsSingle(
  obj,
  pi,
  fixedVars,
  randomVars,
  verbose,
  returnModels,
  Formula,
  randomNested,
  features,
  addMoransI,
  weightMats,
  moranFormula
)

getResults(obj, pi, parameter, moransI = FALSE)
}
\arguments{
\item{obj}{The result object}

\item{pis}{Optional, the pis required. Defaults to all pis in the object}

\item{fixedVars}{Names of fixed effects}

\item{randomVars}{Names of random variables}

\item{verbose}{A boolean, should the formula be printed?}

\item{returnModels}{a boolean: should the full models be returned?
Otherwise only summary statistics are returned}

\item{Formula}{A formula; if not supplied it will be constructed
from the fixed and random variables}

\item{randomNested}{A boolean, indicating if random effects are nested within
point patterns. See details.}

\item{features}{The features for which to fit linear mixed models.
Defaults to all features in the object}

\item{moranFormula}{Formula for Moran's I model fitting}

\item{addMoransI}{A boolean, include Moran's I of the cell-wise PIs in the calculation}

\item{numNNs}{An integer, the number of nearest neighbours in the
weight matrix for the calculation of the Moran's I statistic}

\item{...}{Passed onto fitLMMsSingle}

\item{pi}{The desired PI}

\item{weightMats}{A list of weight matrices for Moran's I}

\item{parameter}{The desired parameter}

\item{moransI}{A boolean, should results for the Moran's I be returned?}
}
\value{
For fitLMMs(), a list of fitted objects

For fitLMMsSingle(), a list of test results, if requested also the linear models are returned

For getResults(), the matrix with results, with p-values in ascending order
\item{Estimate}{The estimated PI}
\item{se}{The corresponding standard error}
\item{pVal}{The p-value}
\item{pAdj}{The Benjamini-Hochberg adjusted p-value}
}
\description{
The PI is used as outcome variable in a linear (mixed) model,
with design variables as regressors. Separate models are fitted for every combination of gene
and PI. fitLMMsSingle() is the workhorse function for a single point pattern,

getResults() extracts effect size estimates, standard errors and adjusted p-values for a certain parameter
from a linear model.
}
\details{
Genes or gene pairs with insufficient observations will be silently
omitted. When randomVars is provided as a vector, independent random
intercepts are fitted for them by default. Providing them separated by '\' or
':' as in the lmer formulas is also allowed to reflect nesting structure, 
but the safest is to construct the formula yourself and pass it onto fitLMMs.

It is by default assumed that random effects are nested within the point
 patterns. This means for instance that cells with the same name but from
 different point patterns are assigned to different random effects. Set
 'randomNested' to FALSE to override this behaviour.

 The Moran's I statistic is used to test whether cell-wise PIs ("nnCell", "nnCellPair", "edge" and "centroid") 
 are spatially autocorrelated across the images. The numeric value of the PI is assigned to the 
 centroid location, and then Moran's I is calculated with a fixed number of numNNs nearest neighbours with equal weights.
}
\examples{
example(addWeightFunction, "smoppix")
lmmModels <- fitLMMs(yangObj, fixedVars = "day", randomVars = "root")
res <- getResults(lmmModels, "nn", "Intercept") #Extract the results
head(res)
}
\seealso{
\link{buildMoransIDataFrame}, \link{buildDataFrame}
}
